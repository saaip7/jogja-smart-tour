name: Deploy Frontend and Backend to Azure VM

on:
  push:
    branches:
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Testing Build pre-Deploy
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i
      - run: npm run build

  deploy:
    runs-on: ubuntu-latest
    if: secrets.AZURE_CREDENTIALS != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ---- Build and Save Docker Images ----
      - name: Build and tag Docker images
        run: |
          cd frontend
          docker build -t my-frontend-app .
          cd ../backend
          docker build -t my-backend-app .

      - name: Save Docker images as tar
        run: |
          docker save my-frontend-app -o my-frontend-app.tar
          docker save my-backend-app -o my-backend-app.tar

      # ---- Transfer Docker Images to Azure VM ----
      - name: Copy Docker images to Azure VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          source: "my-frontend-app.tar,my-backend-app.tar"
          target: "~/"

      # ---- SSH into VM and Run Containers ----
      - name: SSH into Azure VM and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            docker load -i ~/my-frontend-app.tar
            docker load -i ~/my-backend-app.tar

            # Stop & remove old containers (if exist)
            docker stop frontend-container || true
            docker rm frontend-container || true
            docker stop backend-container || true
            docker rm backend-container || true

            # Run frontend container
            docker run -d -p 3000:3000 --name frontend-container my-frontend-app

            # Run backend container
            docker run -d -p 5000:5000 --name backend-container my-backend-app
